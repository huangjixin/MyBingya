<?xml version="1.0" encoding="utf-8"?>
<s:Panel xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 minWidth="500" minHeight="300"
		 creationComplete="titlewindow1_creationCompleteHandler(event)" title="讲义">
	<fx:Script>
		<![CDATA[
			import com.bingya.asset.controller.AssetEvent;
			import com.bingya.asset.model.AssetProxy;
			import com.bingya.common.Global;
			
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			import mx.olap.aggregators.CountAggregator;
			
			import ro.a223.overlay.comp.Overlay;
			
			import spark.events.GridEvent;
			
			private var file:FileReference;  
			private var filePath:String=""; 
			
			private var assetProxy:AssetProxy = new AssetProxy();;
			
			private var _userId:int = 1;
			
			[Bindable]
			public var courseId:int = 1;
			
			private var overlay:Overlay;
			
			[Bindable]
			public function get userId():int
			{
				return _userId;
			}

			public function set userId(value:int):void
			{
				_userId = value;
//				callLater(refresh);
			}

			protected function titlewindow1_creationCompleteHandler(event:FlexEvent):void
			{
				filePath = Global.getInstance().FileUploadPath;
				
				assetProxy.addEventListener(AssetEvent.selectByUserIdFault,selectByUserIdFault);
				assetProxy.addEventListener(AssetEvent.selectByUserIdResult,selectByUserIdResult);

				assetProxy.addEventListener(AssetEvent.deleteByPrimaryKeyFault,deleteByPrimaryKeyFault);
				assetProxy.addEventListener(AssetEvent.deleteByPrimaryKeyResult,deleteByPrimaryKeyResult);
			}
			
			public function refresh():void
			{
				assetProxy.selectByUserId(userId);
			}
			
			protected function deleteByPrimaryKeyResult(event:AssetEvent):void
			{
				assetProxy.selectByUserId(userId);
			}
			
			protected function deleteByPrimaryKeyFault(event:AssetEvent):void
			{
				Alert.show(event.object.toString());
			}
			
			protected function selectByUserIdResult(event:AssetEvent):void
			{
				var arrcol:ArrayCollection;
				if(event.object is ArrayCollection){
					arrcol = event.object as ArrayCollection;
				}else if(event.object is Array){
					arrcol = new ArrayCollection(event.object as Array);
				}
				dataGrid.dataProvider = arrcol;
			}
			
			protected function selectByUserIdFault(event:AssetEvent):void
			{
				Alert.show(event.object.toString(),"selectByUserId调用失败");
			}
			
			protected function titlewindow1_closeHandler(event:CloseEvent = null):void
			{
				PopUpManager.removePopUp(this);
			}
			
			/**
			 * 上传文件。
			 */ 
			protected function uploadBtn_clickHandler(event:MouseEvent):void
			{
				file=new FileReference();  
				file.addEventListener(ProgressEvent.PROGRESS, onProgress);  
				file.addEventListener(Event.SELECT, onSelect);  
				file.addEventListener(Event.COMPLETE,fileUploadCompleteHandler);  
				file.addEventListener(IOErrorEvent.IO_ERROR,onIoError);
				file.addEventListener(DataEvent.UPLOAD_COMPLETE_DATA,onuploadComplete);
				
				var types:FileFilter=new FileFilter("PDF,Office (*.pdf,*.doc,*.ppt,*.docx,*.pptx)", "*.pdf;*.doc;*.ppt;*.docx;*.pptx;");  
				var allTypes:Array=new Array(types);  
				file.browse(allTypes);  
			}
			
			private function fileUploadCompleteHandler(e:Event):void{  
				bar.label="上传成功，在做格式转换"; 
			}  

			protected function onuploadComplete(event:DataEvent):void
			{
				Alert.show("上传成功");
//				barHGroup.visible = false;
				bar.visible = false;
				cancelUploadBtn.visible = false;
				assetProxy.selectByUserId(userId);
				PopUpManager.removePopUp(overlay);
			}
			
			private function onSelect(e:Event):void  
			{  
				if(file){
					/* if(file.name.indexOf(" ") != -1){
						Alert.show("文件名字有空格，请去掉重新上传");
						return;
					} */
				}
				Alert.show("上传 " + file.name + " (共 " + Math.round(file.size) + " 字节)?", "确认上传", Alert.YES | Alert.NO, null, proceedWithUpload);  
			}  
			

			private function onProgress(e:ProgressEvent):void  
			{  
//				lbProgress.text=" 已上传 " + e.bytesLoaded + " 字节，共 " + e.bytesTotal + " 字节";  
				var proc:uint=e.bytesLoaded / e.bytesTotal * 100;  
				bar.setProgress(proc, 100);  
				bar.label="当前进度: " + " " + proc + "%";  
			}  
			

			private function proceedWithUpload(e:CloseEvent):void  
			{  
				if (e.detail == Alert.YES)  
				{  
					var request:URLRequest=new URLRequest(filePath);
					var urlVariables:URLVariables = new URLVariables("userId="+userId+"&courseId="+this.courseId+"&course=english");
					request.data = urlVariables;
					try  
					{  
						file.upload(request);  
						bar.visible = true;
						cancelUploadBtn.visible = true;
//						barHGroup.visible = true;
						
						overlay = PopUpManager.createPopUp(this,Overlay,false) as Overlay;
						overlay.info = "讲义正在上传,请稍等片刻";
						overlay.width = 200;
						overlay.height = 100;
						PopUpManager.centerPopUp(overlay);
					}catch (error:Error)  
					{  
						 trace("上传失败");  
					}  
				 }  
			 }  

			public function cancelUpload():void
			{
				if(file){
					file.cancel();
					bar.visible = false;
					cancelUploadBtn.visible = false;
					
					if(overlay){
						PopUpManager.removePopUp(overlay);
					}
				}
			}
			/**
			 *  删除所选的讲义。
			 */ 
			protected function deleteBtn_clickHandler(event:MouseEvent):void
			{
				Alert.show("确定删除 ", "提示", Alert.YES | Alert.NO, null, deleteSele);  
			}
			
			public function deleteSele(e:CloseEvent=null):void
			{
				var object:Object = dataGrid.selectedItem;
				if(!object){
					return;
				}
				assetProxy.deleteByPrimaryKey(object.id);
			}
			
			protected function onIoError(event:IOErrorEvent):void
			{
				Alert.show(event.text);
			}
			
			protected function dataGrid_gridDoubleClickHandler(event:GridEvent):void
			{
				confirmBtn.dispatchEvent(new MouseEvent(MouseEvent.CLICK));
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<s:layout>
		<s:VerticalLayout/>
	</s:layout>
	<s:HGroup paddingLeft="10" paddingTop="10">
		<s:Button id="uploadBtn" label="上传讲义" click="uploadBtn_clickHandler(event)"/>
		<mx:ProgressBar id="bar" visible="false"/>
		<s:Button id="cancelUploadBtn" visible="false" label="取消上传" click="cancelUpload()"/>
	</s:HGroup>
	<!--<s:HGroup id="barHGroup"  visible="false">
		<s:Label id="lbProgress"/>
	</s:HGroup>-->
	<s:DataGrid id="dataGrid" width="100%" height="100%" doubleClickEnabled="true"
				gridDoubleClick="dataGrid_gridDoubleClickHandler(event)">
		<s:columns>
			<s:ArrayList>
				<s:GridColumn dataField="id" headerText="id"></s:GridColumn>
				<s:GridColumn dataField="name" headerText="名称"></s:GridColumn>
				<!--<s:GridColumn dataField="path" headerText="路径"></s:GridColumn>-->
				<s:GridColumn dataField="createDate" headerText="创建日期"></s:GridColumn>
				<s:GridColumn id="uploadGridColumn" headerText="上传进度">
					<s:itemRenderer>
						<fx:Component>
							<s:GridItemRenderer>
								
								<fx:Script>
									<![CDATA[
										protected function deleteLabel_clickHandler(event:MouseEvent):void
										{
											outerDocument.deleteSele();
										}
										
										protected function openLabel_clickHandler(event:MouseEvent):void
										{
											outerDocument.confirmBtn.dispatchEvent(new MouseEvent(MouseEvent.CLICK));
										}
										
										protected function cancelLabel_clickHandler(event:MouseEvent):void
										{
											outerDocument.cancelUpload();
										}
										
									]]>
								</fx:Script>
								
								<s:HGroup left="2" right="2" top="0" bottom="2"
										  horizontalAlign="center" verticalAlign="middle">
									<!--<mx:ProgressBar id="progressBar" label="" width="100" />
									<s:Label id="cancelLabel" click="cancelLabel_clickHandler(event)"
											 color="blue" text="取消"/>
									<s:Spacer width="100%"/>-->
									<s:Label id="deleteLabel" click="deleteLabel_clickHandler(event)"
											 color="blue" text="删除"/>
									<s:Label id="openLabel" click="openLabel_clickHandler(event)"
											 color="blue" text="打开"/>
								</s:HGroup>
							</s:GridItemRenderer>
						</fx:Component>
					</s:itemRenderer>
				</s:GridColumn>
			</s:ArrayList>
		</s:columns>
	</s:DataGrid>
	<s:HGroup>
		<s:Spacer width="100%"/>
		<!--<s:Button id="openBtn" label="打开" enabled="{dataGrid.selectedItem!=null}"/>-->
		<s:Button id="deleteBtn" visible="false" height="0" label="删除"
				  click="deleteBtn_clickHandler(event)" enabled="{dataGrid.selectedItem!=null}"/>
	</s:HGroup>
	<s:controlBarContent>
		<s:Spacer width="100%"/>
		<s:Button id="confirmBtn" visible="false" label="确定打开"/>
		<s:Button id="cancelBtn" label="关闭" click="titlewindow1_closeHandler();"/>
	</s:controlBarContent>
</s:Panel>
