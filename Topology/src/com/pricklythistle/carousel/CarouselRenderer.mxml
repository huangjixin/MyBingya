<?xml version="1.0" encoding="utf-8"?>
<mx:Canvas xmlns:mx="http://www.adobe.com/2006/mxml"
		   width="400" height="300" backgroundAlpha="0.5" backgroundColor="0xffffff"
		   borderColor="0x666666" borderStyle="solid" cornerRadius="0" mouseOut="onMouseOut(event)"
		   mouseOver="onMouseOver(event)" xmlns:filters="org.gonta.filters.*">
		
	<mx:Script>
		<![CDATA[
		
			//##################################################################
			//#
			//#		Simple renderer to display image with a border and a mouse
			//#		over effect. Any renderer can be used.
			//#
			//##################################################################
			
			import com.imageVO;
		
			private var _data:Object;
			private var _dataUpdate:Boolean = false;
			private var _margin:int = 5;
			
			private function onMouseOver(e:Event):void
			{
//				this.filters = [new GlowFilter(0xfff000)];
				this.filters.push(new GlowFilter(0xfff000));
			}
			
			private function onMouseOut(e:Event):void
			{
				this.filters.pop();
//				this.filters = [];
			}
			
			override protected function commitProperties():void
			{
				super.commitProperties();
				
				if(_dataUpdate)
				{
					_dataUpdate = false;
					displayImage.source = imageVO(data).source;	
				}
			}
			
			override public function set data(value:Object):void
			{
				super.data = value;
				
				_dataUpdate = true;
			}
			
			override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number):void
			{
				super.updateDisplayList(unscaledWidth,unscaledHeight);
				
				if(_imageComplete)
				{
					displayImage.visible = true;
					var imageRatio:Number = displayImage.contentWidth/displayImage.contentHeight;
					
					var doubleMargin:int = _margin*2;
					
					displayImage.width = int(unscaledWidth - doubleMargin);
					displayImage.height = int(displayImage.width/imageRatio);
					
					if(displayImage.height + doubleMargin > unscaledHeight)
					{
						displayImage.height = int(unscaledHeight - doubleMargin);
						displayImage.width = int(displayImage.height*imageRatio);
					}
					
					displayImage.x = int((unscaledWidth-displayImage.width)/2);
					displayImage.y = int((unscaledHeight-displayImage.height)/2);
					
				} else {
					displayImage.visible = false;
				}
				
			}
			
			
			private var _imageComplete:Boolean = false;
			private function onComplete(e:Event):void
			{
				_imageComplete = true;
			}
		]]>
	</mx:Script>
	
	<mx:Image id="displayImage" minWidth="0" minHeight="0" complete="onComplete(event)">
	</mx:Image>
	<mx:filters>  
		<filters:WetFloorFilter y="{this.height}" height="30" alpha=".5"/>  
	</mx:filters>
</mx:Canvas>
