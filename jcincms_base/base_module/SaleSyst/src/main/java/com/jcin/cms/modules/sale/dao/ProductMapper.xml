<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jcin.cms.modules.sale.dao.ProductMapper" >
  <resultMap id="BaseResultMap" type="com.jcin.cms.modules.sale.domain.Product" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="create_date" property="createDate" jdbcType="TIMESTAMP" />
    <result column="create_by" property="createBy" jdbcType="VARCHAR" />
    <result column="parent_id" property="parentId" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="tongji_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, name, create_date, create_by, parent_id, description
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jcin.cms.modules.sale.domain.ProductCriteria" >
    <include refid="OracleDialectPrefix" />
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <include refid="OracleDialectSuffix" />
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from tb_product
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from tb_product
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.jcin.cms.modules.sale.domain.ProductCriteria" >
    delete from tb_product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jcin.cms.modules.sale.domain.Product" >
    insert into tb_product (id, name, create_date, 
      create_by, parent_id, description
      )
    values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{createDate,jdbcType=TIMESTAMP}, 
      #{createBy,jdbcType=VARCHAR}, #{parentId,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.jcin.cms.modules.sale.domain.Product" >
    insert into tb_product
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="createDate != null" >
        create_date,
      </if>
      <if test="createBy != null" >
        create_by,
      </if>
      <if test="parentId != null" >
        parent_id,
      </if>
      <if test="description != null" >
        description,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jcin.cms.modules.sale.domain.ProductCriteria" resultType="java.lang.Integer" >
    select count(*) from tb_product
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tb_product
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.createDate != null" >
        create_date = #{record.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createBy != null" >
        create_by = #{record.createBy,jdbcType=VARCHAR},
      </if>
      <if test="record.parentId != null" >
        parent_id = #{record.parentId,jdbcType=VARCHAR},
      </if>
      <if test="record.description != null" >
        description = #{record.description,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tb_product
    set id = #{record.id,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      create_date = #{record.createDate,jdbcType=TIMESTAMP},
      create_by = #{record.createBy,jdbcType=VARCHAR},
      parent_id = #{record.parentId,jdbcType=VARCHAR},
      description = #{record.description,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jcin.cms.modules.sale.domain.Product" >
    update tb_product
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null" >
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        parent_id = #{parentId,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jcin.cms.modules.sale.domain.Product" >
    update tb_product
    set name = #{name,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      create_by = #{createBy,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <insert id="insertBatch" parameterType="java.util.List" >
    insert into tb_product (id, name, create_date, create_by, parent_id, description) values 
    <foreach collection="list" item="item" index="index" separator="," >
      (#{item.id,jdbcType=VARCHAR}, #{item.name,jdbcType=VARCHAR}, #{item.createDate,jdbcType=TIMESTAMP}, #{item.createBy,jdbcType=VARCHAR}, #{item.parentId,jdbcType=VARCHAR}, #{item.description,jdbcType=VARCHAR})
    </foreach>
  </insert>
  <sql id="OracleDialectPrefix" >
    <if test="page != null" >
      <if test="dialect == 'oracle'" >
        select * from ( select row_.*, rownum rownum_ from ( 
      </if>
    </if>
  </sql>
  <sql id="OracleDialectSuffix" >
    <if test="page != null" >
      <if test="dialect == 'oracle'" >
        <![CDATA[ ) row_ ) where rownum_ > #{page.start} and rownum_ <= #{page.pageSize} ]]>
      </if>
      <if test="dialect == 'mysql'" >
        limit #{page.start} , #{page.pageSize}
      </if>
    </if>
  </sql>
  <sql id="tongjiSuffix" >
    <if test="example.page != null" >
      limit #{example.page.start} , #{example.page.pageSize}
    </if>
  </sql>
  <select id="selectTongjiByExample" parameterType="map" resultType="com.jcin.cms.modules.sale.domain.ProductSaleTj" >
		select 
			<if test="record != null">
				<if test="record.countTotal ==false" >
			      	 p.name,
			    </if>
			</if>
		    sum(sto.procount) as procount,
			sum(s.total_amount) as s_total_amount,
		    sum(b.total_amount) as b_total_amount,
			sum(s.sale_num*(s.sale_amount-b.buy_amount)) as profit
		from
		    tb_product as p
		        left join
			tb_sale
		    as s ON s.pro_id = p.id
		        left join
		     tb_buy
			as b ON p.id = b.pro_id and b.id=s.buy_id
		        left join
		    tb_storage as sto ON p.id = sto.pro_id and sto.buy_id = b.id
		    where 1=1
		<if test="record != null">
			<if test="record.countTotal ==false" >
		      	<if test="record.name != null" >
		      	and p.name like '%${record.name}%'
		    	</if>
		    </if>
			<if test="record.beginDate != null" >
		      	and s.create_date >= #{record.beginDate}
		      	and b.create_date >= #{record.beginDate}
		    </if>
			<if test="record.endDate != null" >
		      	and s.create_date &lt;= #{record.endDate}
		      	and b.create_date &lt;= #{record.endDate}
		    </if>
		</if>
		<if test="record != null">
			<if test="record.countTotal ==false" >
		      	group by p.id
				order by s_total_amount desc
		    </if>
		</if>
		<if test="_parameter != null" >
      		<include refid="tongjiSuffix" />
    	</if>
  </select>
  <select id="countTongjiByExample" parameterType="map" resultType="java.lang.Integer" >
		select 
		   count(*)
		from (
			select 
				<if test="record != null">
					<if test="record.countTotal ==false" >
				      	 p.name,
				    </if>
				</if>
			    sum(sto.procount) as procount,
				sum(s.total_amount) as s_total_amount,
			    sum(b.total_amount) as b_total_amount,
				sum(s.sale_num*(s.sale_amount-b.buy_amount)) as profit
			from
			    tb_product as p
			        left join
				tb_sale
			    as s ON s.pro_id = p.id
			        left join
			     tb_buy
				as b ON p.id = b.pro_id and b.id=s.buy_id
			        left join
			    tb_storage as sto ON p.id = sto.pro_id and sto.buy_id = b.id
			where 1=1
				<if test="record != null">
					<if test="record.name != null" >
		      			and p.name like '%${record.name}%'
		    		</if>
					<if test="record.beginDate != null" >
		      			and s.create_date >= #{record.beginDate}
		      			and b.create_date >= #{record.beginDate}
		    		</if>
					<if test="record.endDate != null" >
		      			and s.create_date &lt;= #{record.endDate}
		      			and b.create_date &lt;= #{record.endDate}
		    		</if>
				</if>
			group by p.id
		) aa
  </select>
</mapper>