<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jcin.cms.modules.syst.dao.ResourceMapper" >
  <resultMap id="BaseResultMap" type="com.jcin.cms.modules.syst.domain.Resource" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="parentids" property="parentids" jdbcType="VARCHAR" />
    <result column="parent_id" property="parentId" jdbcType="VARCHAR" />
    <result column="auth_name" property="authName" jdbcType="VARCHAR" />
    <result column="path" property="path" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, name, parentids, parent_id, auth_name, path, type
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.jcin.cms.modules.syst.domain.ResourceCriteria" >
    <include refid="OracleDialectPrefix" />
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from tb_resource
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
    <include refid="OracleDialectSuffix" />
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from tb_resource
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from tb_resource
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.jcin.cms.modules.syst.domain.ResourceCriteria" >
    delete from tb_resource
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.jcin.cms.modules.syst.domain.Resource" >
    insert into tb_resource (id, name, parentids, 
      parent_id, auth_name, path, 
      type)
    values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, #{parentids,jdbcType=VARCHAR}, 
      #{parentId,jdbcType=VARCHAR}, #{authName,jdbcType=VARCHAR}, #{path,jdbcType=VARCHAR}, 
      #{type,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.jcin.cms.modules.syst.domain.Resource" >
    insert into tb_resource
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="parentids != null" >
        parentids,
      </if>
      <if test="parentId != null" >
        parent_id,
      </if>
      <if test="authName != null" >
        auth_name,
      </if>
      <if test="path != null" >
        path,
      </if>
      <if test="type != null" >
        type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="parentids != null" >
        #{parentids,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=VARCHAR},
      </if>
      <if test="authName != null" >
        #{authName,jdbcType=VARCHAR},
      </if>
      <if test="path != null" >
        #{path,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.jcin.cms.modules.syst.domain.ResourceCriteria" resultType="java.lang.Integer" >
    select count(*) from tb_resource
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update tb_resource
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.parentids != null" >
        parentids = #{record.parentids,jdbcType=VARCHAR},
      </if>
      <if test="record.parentId != null" >
        parent_id = #{record.parentId,jdbcType=VARCHAR},
      </if>
      <if test="record.authName != null" >
        auth_name = #{record.authName,jdbcType=VARCHAR},
      </if>
      <if test="record.path != null" >
        path = #{record.path,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update tb_resource
    set id = #{record.id,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      parentids = #{record.parentids,jdbcType=VARCHAR},
      parent_id = #{record.parentId,jdbcType=VARCHAR},
      auth_name = #{record.authName,jdbcType=VARCHAR},
      path = #{record.path,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.jcin.cms.modules.syst.domain.Resource" >
    update tb_resource
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="parentids != null" >
        parentids = #{parentids,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        parent_id = #{parentId,jdbcType=VARCHAR},
      </if>
      <if test="authName != null" >
        auth_name = #{authName,jdbcType=VARCHAR},
      </if>
      <if test="path != null" >
        path = #{path,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.jcin.cms.modules.syst.domain.Resource" >
    update tb_resource
    set name = #{name,jdbcType=VARCHAR},
      parentids = #{parentids,jdbcType=VARCHAR},
      parent_id = #{parentId,jdbcType=VARCHAR},
      auth_name = #{authName,jdbcType=VARCHAR},
      path = #{path,jdbcType=VARCHAR},
      type = #{type,jdbcType=VARCHAR}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <insert id="insertBatch" parameterType="java.util.List" >
    insert into tb_resource (id, name, parentids, parent_id, auth_name, path, type) values 
    <foreach collection="list" item="item" index="index" separator="," >
      (#{item.id,jdbcType=VARCHAR}, #{item.name,jdbcType=VARCHAR}, #{item.parentids,jdbcType=VARCHAR}, #{item.parentId,jdbcType=VARCHAR}, #{item.authName,jdbcType=VARCHAR}, #{item.path,jdbcType=VARCHAR}, #{item.type,jdbcType=VARCHAR})
    </foreach>
  </insert>
  <sql id="OracleDialectPrefix" >
    <if test="page != null" >
      <if test="dialect == 'oracle'" >
        select * from ( select row_.*, rownum rownum_ from ( 
      </if>
    </if>
  </sql>
  <sql id="OracleDialectSuffix" >
    <if test="page != null" >
      <if test="dialect == 'oracle'" >
        <![CDATA[ ) row_ ) where rownum_ > #{page.start} and rownum_ <= #{page.pageSize} ]]>
      </if>
      <if test="dialect == 'mysql'" >
        limit #{page.start} , #{page.pageSize}
      </if>
    </if>
  </sql>
  
  <select id="selectByUsername" resultMap="BaseResultMap" parameterType="java.lang.String" >
  	SELECT 
		r.*
	FROM
		tb_resource r
			left join
		tb_role_resource role_resource on role_resource.resource_id = r.id
			left join 
   		tb_role role on role_resource.role_id = role.id
        	left join
    	tb_user_role user_role ON role.id = user_role.tb_role_id
        	left join
    	tb_user user ON user_role.user_id = user.id
	where
    	user.username = #{username,jdbcType=VARCHAR}
  </select>
  
  <select id="selectOnOrgByUsername" resultMap="BaseResultMap" parameterType="java.lang.String" >
  	SELECT 
		r.*
	FROM
		tb_resource r
			left join
		tb_organization_resource organization_resource on organization_resource.resource_id = r.id
			left join 
   		tb_organization organization on organization_resource.organization_id = organization.id
        	left join
    	tb_user_organization user_organization ON organization.id = user_organization.organization_id
        	left join
    	tb_user user ON user_organization.user_id = user.id
	where
    	user.username = #{username,jdbcType=VARCHAR}
  </select>
  <select id="selectByRoleId" resultMap="BaseResultMap" parameterType="java.lang.String" >
  	SELECT 
		r.*
	FROM
		tb_resource r
			left join
		tb_role_resource role_resource on role_resource.resource_id = r.id
			left join 
   		tb_role role on role_resource.role_id = role.id
	where
    	role.id = #{roleId,jdbcType=VARCHAR}
  </select>
  <select id="selectByOrgId" resultMap="BaseResultMap" parameterType="java.lang.String" >
  	SELECT 
		r.*
	FROM
		tb_resource r
			left join
		tb_organization_resource organization_resource on organization_resource.resource_id = r.id
			left join 
   		tb_organization organization on organization_resource.organization_id = organization.id
	where
    	organization.id = #{orgId,jdbcType=VARCHAR}
  </select>
</mapper>