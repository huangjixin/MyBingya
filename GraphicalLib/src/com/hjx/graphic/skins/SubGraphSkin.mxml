<?xml version="1.0" encoding="utf-8"?>
<s:Skin xmlns:fx="http://ns.adobe.com/mxml/2009" 
		xmlns:s="library://ns.adobe.com/flex/spark" 
		xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:graphic="com.hjx.graphic.*">
	<!-- host component -->
	<fx:Metadata>
		[HostComponent("com.hjx.graphic.SubGraph")]
	</fx:Metadata>
	
	<s:states>
		<s:State name="normal" />
		<s:State name="collapsed" />
	</s:states>
	
	<!-- SkinParts
	name=labelElement, type=flash.display.DisplayObject, required=true
	name=graph, type=com.hjx.graphic.Graph, required=true
	name=base, type=mx.core.UIComponent, required=true
	-->
	<fx:Declarations>
		<mx:Sequence id="collapseSequence" effectEnd="{hostComponent.collapseAnimationEnd()}"
					 effectStart="{hostComponent.collapseAnimationStart()}">
			<s:Fade alphaTo="0" duration="150" target="{graphGroup}"/>
			<s:Resize duration="150" target="{base}"/>        
		</mx:Sequence>  
		
		<mx:Sequence id="expandSequence" effectEnd="{hostComponent.expandAnimationEnd()}"
					 effectStart="{hostComponent.expandAnimationStart()}">
			<s:Resize duration="150" target="{base}"/>        
			<s:Fade alphaTo="1" duration="150" target="{graphGroup}"/>
		</mx:Sequence> 
	</fx:Declarations>
	<s:transitions>
		<mx:Transition effect="{collapseSequence}" fromState="*" toState="collapsed"/>
		<mx:Transition effect="{collapseSequence}" fromState="*" toState="collapsedSelected"/>
		<mx:Transition effect="{expandSequence}" fromState="collapsed" toState="*"/>
		<mx:Transition effect="{expandSequence}" fromState="collapsedSelected" toState="*"/>
	</s:transitions>
	<s:Group id="base" left="0" top="0" width="{hostComponent.expandedWidth}"
			 height="{hostComponent.expandedHeight}"
			 width.collapsed="{hostComponent.collapsedWidth}"
			 height.collapsed="{hostComponent.collapsedHeight}">
		<!--<s:filters>
		<s:GlowFilter includeIn="normalAndShowsCaret" alpha="0.8" blurX="8" blurY="8"
		color="{caretColor}">
		</s:GlowFilter>
		</s:filters>-->
		
		<s:Rect id="border" left="0" top="0" right="0" bottom="0" radiusX="5" radiusY="5">
			<s:stroke>
				<s:SolidColorStroke color="0x03689A" weight="2"
									color.collapsed="0x03689A"/>
			</s:stroke>
			<s:fill>
				<s:SolidColor color="0xF7F7F7"
							  color.collapsed="0xFCFCFF"/>
			</s:fill>
		</s:Rect>
		
		<s:Group id="markers" bottom="2" horizontalCenter="0">
			
			<s:layout>
				<s:HorizontalLayout gap="3"/>
			</s:layout>
			
			<!-- button to expand or collapse the subgraph -->
			
			<s:Group width="12" height="12"
					 mouseDown="{hostComponent.collapsed = !hostComponent.collapsed; event.stopPropagation();}">
				<s:Rect bottom="1" width="12" height="12" radiusX="0" radiusY="0">
					<s:fill>
						<s:SolidColor color="0xF7F7F7"/>
					</s:fill>
					<s:stroke>
						<s:SolidColorStroke color="0x03689A" weight="1"/>
					</s:stroke>
				</s:Rect>
				<s:Rect width="8" height="2" horizontalCenter="0" verticalCenter="-1">
					<s:fill>
						<s:SolidColor color="0x03689A"/>
					</s:fill>
				</s:Rect>
				<s:Rect visible="false" visible.collapsed="true" width="2" height="8" horizontalCenter="0" verticalCenter="-1">
					<s:fill>
						<s:SolidColor color="0x03689A"/>
					</s:fill>
				</s:Rect>
			</s:Group>
		</s:Group>
		
		<s:Group id="labelElement" left="5" top="8" fontSize="12"
				 horizontalCenter.collapsed="0" verticalCenter.collapsed="-10">
			<s:Label id="label" maxWidth="{base.width - 2}" color="0x000000"
					 text="{hostComponent.label}" textAlign="start"
					 textAlign.collapsed="center"/>
		</s:Group>
		
		<s:Group id="graphGroup" visible="true" left="5" right="5" top="{labelElement.height + 10}"
				 bottom="20" alpha="1" clipAndEnableScrolling="true"
				 visible.collapsed="false" alpha.collapsed="0">
			<s:Rect left="0" top="0" width="100%" height="100%">
				<s:fill>
					<s:SolidColor color="0xF7F7F7"/>
				</s:fill>
			</s:Rect>
			<graphic:Graph id="graph" left="{hostComponent.graphMarginLeft}"
						   right="{hostComponent.graphMarginRight}"
						   top="{hostComponent.graphMarginTop}"
						   bottom="{hostComponent.graphMarginBottom}"/>
		</s:Group>
	</s:Group>
</s:Skin>
